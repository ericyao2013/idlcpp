//DO NOT EDIT THIS FILE, it is generated by idlcpp
//http://www.idlcpp.org

#pragma once

#include "NotifyHandler.h"
#include "ClassType.h"
#include "EnumType.h"
#include "TypeAlias.h"
#include "Variant.h"
#include "SubclassInvoker.h"

namespace idlcpp
{

	class __pafcore__PropertyChangedFlag_Type : public ::pafcore::EnumType
	{
	public:
		__pafcore__PropertyChangedFlag_Type();
	public:
		PAFCORE_EXPORT static __pafcore__PropertyChangedFlag_Type* GetSingleton();
	};

	class __pafcore__NotifyHandler_Type : public ::pafcore::ClassType
	{
	public:
		__pafcore__NotifyHandler_Type();
	public:
		virtual void destroyInstance(void* address);
		virtual void destroyArray(void* address);
		virtual bool assign(void* dst, const void* src);
	public:
		PAFCORE_EXPORT static __pafcore__NotifyHandler_Type* GetSingleton();
	};

	class __pafcore__PropertyChangedNotifyHandler_Type : public ::pafcore::ClassType
	{
	public:
		__pafcore__PropertyChangedNotifyHandler_Type();
	public:
		virtual void destroyInstance(void* address);
		virtual void destroyArray(void* address);
		virtual bool assign(void* dst, const void* src);
	public:
		virtual void* createSubclassProxy(::pafcore::SubclassInvoker* subclassInvoker);
		virtual void destroySubclassProxy(void* subclassProxy);
	public:
		static ::pafcore::ErrorCode PropertyChangedNotifyHandler_onDynamicPropertyChanged(::pafcore::Variant* result, ::pafcore::Variant** args, int numArgs);
		static ::pafcore::ErrorCode PropertyChangedNotifyHandler_onPropertyAvailabilityChanged(::pafcore::Variant* result, ::pafcore::Variant** args, int numArgs);
		static ::pafcore::ErrorCode PropertyChangedNotifyHandler_onPropertyChanged(::pafcore::Variant* result, ::pafcore::Variant** args, int numArgs);
		static ::pafcore::ErrorCode PropertyChangedNotifyHandler_onUpdateDynamicProperty(::pafcore::Variant* result, ::pafcore::Variant** args, int numArgs);
	public:
		PAFCORE_EXPORT static __pafcore__PropertyChangedNotifyHandler_Type* GetSingleton();
	};

	class __pafcore__PropertyChangedNotifyHandler_Proxy : public ::pafcore::PropertyChangedNotifyHandler
	{
	public:
		::pafcore::SubclassInvoker* m_subclassInvoker;
	public:
		__pafcore__PropertyChangedNotifyHandler_Proxy(::pafcore::SubclassInvoker* subclassInvoker);
		~__pafcore__PropertyChangedNotifyHandler_Proxy();
		void onPropertyChanged( pafcore::Reference* sender, string_t propertyName, pafcore::PropertyChangedFlag flag, pafcore::Iterator* iterator);
		void onPropertyAvailabilityChanged( pafcore::Reference* sender, string_t propertyName);
		void onDynamicPropertyChanged( pafcore::Reference* sender, string_t propertyName, pafcore::PropertyChangedFlag flag, pafcore::Iterator* iterator);
		void onUpdateDynamicProperty( pafcore::Reference* sender);
	};

}

template<>
struct RuntimeTypeOf<::pafcore::PropertyChangedFlag>
{
	typedef ::idlcpp::__pafcore__PropertyChangedFlag_Type RuntimeType;
	enum {type_category = ::pafcore::enum_object};
};

template<>
struct RuntimeTypeOf<::pafcore::NotifyHandler>
{
	typedef ::idlcpp::__pafcore__NotifyHandler_Type RuntimeType;
	enum {type_category = ::pafcore::reference_object};
};

template<>
struct RuntimeTypeOf<::pafcore::PropertyChangedNotifyHandler>
{
	typedef ::idlcpp::__pafcore__PropertyChangedNotifyHandler_Type RuntimeType;
	enum {type_category = ::pafcore::reference_object};
};

