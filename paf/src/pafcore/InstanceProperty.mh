//DO NOT EDIT THIS FILE, it is generated by idlcpp
//http://www.idlcpp.org

#pragma once

#include "InstanceProperty.h"
#include "ClassType.h"
#include "EnumType.h"
#include "TypeAlias.h"
#include "Variant.h"
#include "SubclassInvoker.h"

namespace idlcpp
{

	class __pafcore__InstanceProperty_Type : public ::pafcore::ClassType
	{
	public:
		__pafcore__InstanceProperty_Type();
	public:
		virtual void destroyInstance(void* address);
		virtual void destroyArray(void* address);
		virtual bool assign(void* dst, const void* src);
	public:
		static ::pafcore::ErrorCode InstanceProperty_get_hasCandidate(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode InstanceProperty_get_hasGetter(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode InstanceProperty_get_hasResizer(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode InstanceProperty_get_hasSetter(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode InstanceProperty_get_hasSizer(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode InstanceProperty_get_isArray(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode InstanceProperty_get_isKeyPtr(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode InstanceProperty_get_isList(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode InstanceProperty_get_isMap(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode InstanceProperty_get_isPtr(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode InstanceProperty_get_isSimple(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode InstanceProperty_get_keyType(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode InstanceProperty_get_objectType(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode InstanceProperty_get_serializable(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
		static ::pafcore::ErrorCode InstanceProperty_get_type(::pafcore::InstanceProperty* instanceProperty, ::pafcore::Variant* that, ::pafcore::Variant* value);
	public:
		PAFCORE_EXPORT static __pafcore__InstanceProperty_Type* GetSingleton();
	};

}

template<>
struct RuntimeTypeOf<::pafcore::InstanceProperty>
{
	typedef ::idlcpp::__pafcore__InstanceProperty_Type RuntimeType;
	enum {type_category = ::pafcore::reference_object};
};

