//DO NOT EDIT THIS FILE, it is generated by idlcpp
//http://www.idlcpp.org

#pragma once

#include "Typedef.h"
#include "ClassType.h"
#include "EnumType.h"
#include "TypeAlias.h"
#include "Variant.h"
#include "SubclassInvoker.h"

namespace idlcpp
{

	class __bool_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__bool_t_Type();
	public:
		PAFCORE_EXPORT static __bool_t_Type* GetSingleton();
	};

	class __char_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__char_t_Type();
	public:
		PAFCORE_EXPORT static __char_t_Type* GetSingleton();
	};

	class __schar_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__schar_t_Type();
	public:
		PAFCORE_EXPORT static __schar_t_Type* GetSingleton();
	};

	class __uchar_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__uchar_t_Type();
	public:
		PAFCORE_EXPORT static __uchar_t_Type* GetSingleton();
	};

	class __short_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__short_t_Type();
	public:
		PAFCORE_EXPORT static __short_t_Type* GetSingleton();
	};

	class __ushort_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__ushort_t_Type();
	public:
		PAFCORE_EXPORT static __ushort_t_Type* GetSingleton();
	};

	class __long_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__long_t_Type();
	public:
		PAFCORE_EXPORT static __long_t_Type* GetSingleton();
	};

	class __ulong_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__ulong_t_Type();
	public:
		PAFCORE_EXPORT static __ulong_t_Type* GetSingleton();
	};

	class __longlong_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__longlong_t_Type();
	public:
		PAFCORE_EXPORT static __longlong_t_Type* GetSingleton();
	};

	class __ulonglong_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__ulonglong_t_Type();
	public:
		PAFCORE_EXPORT static __ulonglong_t_Type* GetSingleton();
	};

	class __int_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__int_t_Type();
	public:
		PAFCORE_EXPORT static __int_t_Type* GetSingleton();
	};

	class __uint_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__uint_t_Type();
	public:
		PAFCORE_EXPORT static __uint_t_Type* GetSingleton();
	};

	class __float_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__float_t_Type();
	public:
		PAFCORE_EXPORT static __float_t_Type* GetSingleton();
	};

	class __double_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__double_t_Type();
	public:
		PAFCORE_EXPORT static __double_t_Type* GetSingleton();
	};

	class __longdouble_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__longdouble_t_Type();
	public:
		PAFCORE_EXPORT static __longdouble_t_Type* GetSingleton();
	};

	class __byte_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__byte_t_Type();
	public:
		PAFCORE_EXPORT static __byte_t_Type* GetSingleton();
	};

	class __int8_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__int8_t_Type();
	public:
		PAFCORE_EXPORT static __int8_t_Type* GetSingleton();
	};

	class __uint8_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__uint8_t_Type();
	public:
		PAFCORE_EXPORT static __uint8_t_Type* GetSingleton();
	};

	class __int16_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__int16_t_Type();
	public:
		PAFCORE_EXPORT static __int16_t_Type* GetSingleton();
	};

	class __uint16_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__uint16_t_Type();
	public:
		PAFCORE_EXPORT static __uint16_t_Type* GetSingleton();
	};

	class __int32_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__int32_t_Type();
	public:
		PAFCORE_EXPORT static __int32_t_Type* GetSingleton();
	};

	class __uint32_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__uint32_t_Type();
	public:
		PAFCORE_EXPORT static __uint32_t_Type* GetSingleton();
	};

	class __int64_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__int64_t_Type();
	public:
		PAFCORE_EXPORT static __int64_t_Type* GetSingleton();
	};

	class __uint64_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__uint64_t_Type();
	public:
		PAFCORE_EXPORT static __uint64_t_Type* GetSingleton();
	};

	class __size_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__size_t_Type();
	public:
		PAFCORE_EXPORT static __size_t_Type* GetSingleton();
	};

	class __ptrdiff_t_Type : public ::pafcore::TypeAlias
	{
	public:
		__ptrdiff_t_Type();
	public:
		PAFCORE_EXPORT static __ptrdiff_t_Type* GetSingleton();
	};

	class __Nil_Type : public ::pafcore::ClassType
	{
	public:
		__Nil_Type();
	public:
		virtual void destroyInstance(void* address);
		virtual void destroyArray(void* address);
		virtual bool assign(void* dst, const void* src);
	public:
		PAFCORE_EXPORT static __Nil_Type* GetSingleton();
	};

	class __pafcore__Buffer_Type : public ::pafcore::ClassType
	{
	public:
		__pafcore__Buffer_Type();
	public:
		virtual void destroyInstance(void* address);
		virtual void destroyArray(void* address);
		virtual bool assign(void* dst, const void* src);
	public:
		PAFCORE_EXPORT static __pafcore__Buffer_Type* GetSingleton();
	};

	class __pafcore__MethodAsProperty_Type : public ::pafcore::ClassType
	{
	public:
		__pafcore__MethodAsProperty_Type();
	public:
		virtual void destroyInstance(void* address);
		virtual void destroyArray(void* address);
		virtual bool assign(void* dst, const void* src);
	public:
		PAFCORE_EXPORT static __pafcore__MethodAsProperty_Type* GetSingleton();
	};

}

template<>
struct RuntimeTypeOf<::Nil>
{
	typedef ::idlcpp::__Nil_Type RuntimeType;
	enum {type_category = ::pafcore::value_object};
};

template<>
struct RuntimeTypeOf<::pafcore::Buffer>
{
	typedef ::idlcpp::__pafcore__Buffer_Type RuntimeType;
	enum {type_category = ::pafcore::value_object};
};

template<>
struct RuntimeTypeOf<::pafcore::MethodAsProperty>
{
	typedef ::idlcpp::__pafcore__MethodAsProperty_Type RuntimeType;
	enum {type_category = ::pafcore::value_object};
};

